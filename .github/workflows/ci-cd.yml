name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g serverless
        serverless plugin install -n serverless-python-requirements
    
    - name: Run SAST with Bandit
      run: |
        pip install bandit
        bandit -r . -f custom --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}" --exclude ./node_modules

    - name: Run OWASP Dependency-Check
      uses: docker://owasp/dependency-check-action:latest
      with:
        args: >
          --scan .
          --format "HTML"
          --project "My Project"
          --out ./reports
      continue-on-error: true

    - name: Upload dependency check report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: ./reports

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::367222926996:role/DevSecOpsChallengeRole
        aws-region: us-east-1  # or your preferred AWS region

    - name: Verify AWS Credentials
      run: |
        aws sts get-caller-identity
        aws iam get-user

    - name: Deploy to AWS
      run: |
        echo "AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}"
        echo "AWS_SECRET_ACCESS_KEY is set: ${{ env.AWS_SECRET_ACCESS_KEY != '' }}"
        echo "AWS_SESSION_TOKEN is set: ${{ env.AWS_SESSION_TOKEN != '' }}"
        serverless deploy

    - name: Send findings to AWS Security Hub
      run: |
        # This is a simplified example. You'd need to format your findings to match Security Hub's format.
        aws securityhub batch-import-findings --findings file://findings.json
